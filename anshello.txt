
hello：     文件格式 elf64-x86-64


Disassembly of section .init:

00000000004004a8 <_init>:
  4004a8:	48 83 ec 08          	sub    $0x8,%rsp
  4004ac:	48 8b 05 45 0b 20 00 	mov    0x200b45(%rip),%rax        # 600ff8 <__gmon_start__>
  4004b3:	48 85 c0             	test   %rax,%rax
  4004b6:	74 02                	je     4004ba <_init+0x12>
  4004b8:	ff d0                	callq  *%rax
  4004ba:	48 83 c4 08          	add    $0x8,%rsp
  4004be:	c3                   	retq   

Disassembly of section .plt:

00000000004004c0 <.plt>:
  4004c0:	ff 35 42 0b 20 00    	pushq  0x200b42(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004c6:	ff 25 44 0b 20 00    	jmpq   *0x200b44(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004d0 <puts@plt>:
  4004d0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601018 <puts@GLIBC_2.2.5>
  4004d6:	68 00 00 00 00       	pushq  $0x0
  4004db:	e9 e0 ff ff ff       	jmpq   4004c0 <.plt>

00000000004004e0 <printf@plt>:
  4004e0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601020 <printf@GLIBC_2.2.5>
  4004e6:	68 01 00 00 00       	pushq  $0x1
  4004eb:	e9 d0 ff ff ff       	jmpq   4004c0 <.plt>

00000000004004f0 <getchar@plt>:
  4004f0:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601028 <getchar@GLIBC_2.2.5>
  4004f6:	68 02 00 00 00       	pushq  $0x2
  4004fb:	e9 c0 ff ff ff       	jmpq   4004c0 <.plt>

0000000000400500 <exit@plt>:
  400500:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 601030 <exit@GLIBC_2.2.5>
  400506:	68 03 00 00 00       	pushq  $0x3
  40050b:	e9 b0 ff ff ff       	jmpq   4004c0 <.plt>

0000000000400510 <sleep@plt>:
  400510:	ff 25 22 0b 20 00    	jmpq   *0x200b22(%rip)        # 601038 <sleep@GLIBC_2.2.5>
  400516:	68 04 00 00 00       	pushq  $0x4
  40051b:	e9 a0 ff ff ff       	jmpq   4004c0 <.plt>

Disassembly of section .text:

0000000000400520 <_start>:
  400520:	31 ed                	xor    %ebp,%ebp
  400522:	49 89 d1             	mov    %rdx,%r9
  400525:	5e                   	pop    %rsi
  400526:	48 89 e2             	mov    %rsp,%rdx
  400529:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40052d:	50                   	push   %rax
  40052e:	54                   	push   %rsp
  40052f:	49 c7 c0 00 07 40 00 	mov    $0x400700,%r8
  400536:	48 c7 c1 90 06 40 00 	mov    $0x400690,%rcx
  40053d:	48 c7 c7 07 06 40 00 	mov    $0x400607,%rdi
  400544:	ff 15 a6 0a 20 00    	callq  *0x200aa6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40054a:	f4                   	hlt    
  40054b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400550 <_dl_relocate_static_pie>:
  400550:	f3 c3                	repz retq 
  400552:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400559:	00 00 00 
  40055c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400560 <deregister_tm_clones>:
  400560:	55                   	push   %rbp
  400561:	b8 58 10 60 00       	mov    $0x601058,%eax
  400566:	48 3d 58 10 60 00    	cmp    $0x601058,%rax
  40056c:	48 89 e5             	mov    %rsp,%rbp
  40056f:	74 17                	je     400588 <deregister_tm_clones+0x28>
  400571:	b8 00 00 00 00       	mov    $0x0,%eax
  400576:	48 85 c0             	test   %rax,%rax
  400579:	74 0d                	je     400588 <deregister_tm_clones+0x28>
  40057b:	5d                   	pop    %rbp
  40057c:	bf 58 10 60 00       	mov    $0x601058,%edi
  400581:	ff e0                	jmpq   *%rax
  400583:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400588:	5d                   	pop    %rbp
  400589:	c3                   	retq   
  40058a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400590 <register_tm_clones>:
  400590:	be 58 10 60 00       	mov    $0x601058,%esi
  400595:	55                   	push   %rbp
  400596:	48 81 ee 58 10 60 00 	sub    $0x601058,%rsi
  40059d:	48 89 e5             	mov    %rsp,%rbp
  4005a0:	48 c1 fe 03          	sar    $0x3,%rsi
  4005a4:	48 89 f0             	mov    %rsi,%rax
  4005a7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005ab:	48 01 c6             	add    %rax,%rsi
  4005ae:	48 d1 fe             	sar    %rsi
  4005b1:	74 15                	je     4005c8 <register_tm_clones+0x38>
  4005b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005b8:	48 85 c0             	test   %rax,%rax
  4005bb:	74 0b                	je     4005c8 <register_tm_clones+0x38>
  4005bd:	5d                   	pop    %rbp
  4005be:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005c3:	ff e0                	jmpq   *%rax
  4005c5:	0f 1f 00             	nopl   (%rax)
  4005c8:	5d                   	pop    %rbp
  4005c9:	c3                   	retq   
  4005ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005d0 <__do_global_dtors_aux>:
  4005d0:	80 3d 7d 0a 20 00 00 	cmpb   $0x0,0x200a7d(%rip)        # 601054 <_edata>
  4005d7:	75 17                	jne    4005f0 <__do_global_dtors_aux+0x20>
  4005d9:	55                   	push   %rbp
  4005da:	48 89 e5             	mov    %rsp,%rbp
  4005dd:	e8 7e ff ff ff       	callq  400560 <deregister_tm_clones>
  4005e2:	c6 05 6b 0a 20 00 01 	movb   $0x1,0x200a6b(%rip)        # 601054 <_edata>
  4005e9:	5d                   	pop    %rbp
  4005ea:	c3                   	retq   
  4005eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4005f0:	f3 c3                	repz retq 
  4005f2:	0f 1f 40 00          	nopl   0x0(%rax)
  4005f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005fd:	00 00 00 

0000000000400600 <frame_dummy>:
  400600:	55                   	push   %rbp
  400601:	48 89 e5             	mov    %rsp,%rbp
  400604:	5d                   	pop    %rbp
  400605:	eb 89                	jmp    400590 <register_tm_clones>

0000000000400607 <main>:
  400607:	55                   	push   %rbp
  400608:	48 89 e5             	mov    %rsp,%rbp
  40060b:	48 83 ec 20          	sub    $0x20,%rsp
  40060f:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400612:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  400616:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
  40061a:	74 14                	je     400630 <main+0x29>
  40061c:	bf 14 07 40 00       	mov    $0x400714,%edi
  400621:	e8 aa fe ff ff       	callq  4004d0 <puts@plt>
  400626:	bf 01 00 00 00       	mov    $0x1,%edi
  40062b:	e8 d0 fe ff ff       	callq  400500 <exit@plt>
  400630:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400637:	eb 39                	jmp    400672 <main+0x6b>
  400639:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40063d:	48 83 c0 10          	add    $0x10,%rax
  400641:	48 8b 10             	mov    (%rax),%rdx
  400644:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400648:	48 83 c0 08          	add    $0x8,%rax
  40064c:	48 8b 00             	mov    (%rax),%rax
  40064f:	48 89 c6             	mov    %rax,%rsi
  400652:	bf 32 07 40 00       	mov    $0x400732,%edi
  400657:	b8 00 00 00 00       	mov    $0x0,%eax
  40065c:	e8 7f fe ff ff       	callq  4004e0 <printf@plt>
  400661:	8b 05 e9 09 20 00    	mov    0x2009e9(%rip),%eax        # 601050 <sleepsecs>
  400667:	89 c7                	mov    %eax,%edi
  400669:	e8 a2 fe ff ff       	callq  400510 <sleep@plt>
  40066e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400672:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  400676:	7e c1                	jle    400639 <main+0x32>
  400678:	e8 73 fe ff ff       	callq  4004f0 <getchar@plt>
  40067d:	b8 00 00 00 00       	mov    $0x0,%eax
  400682:	c9                   	leaveq 
  400683:	c3                   	retq   
  400684:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40068b:	00 00 00 
  40068e:	66 90                	xchg   %ax,%ax

0000000000400690 <__libc_csu_init>:
  400690:	41 57                	push   %r15
  400692:	41 56                	push   %r14
  400694:	49 89 d7             	mov    %rdx,%r15
  400697:	41 55                	push   %r13
  400699:	41 54                	push   %r12
  40069b:	4c 8d 25 6e 07 20 00 	lea    0x20076e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4006a2:	55                   	push   %rbp
  4006a3:	48 8d 2d 6e 07 20 00 	lea    0x20076e(%rip),%rbp        # 600e18 <__init_array_end>
  4006aa:	53                   	push   %rbx
  4006ab:	41 89 fd             	mov    %edi,%r13d
  4006ae:	49 89 f6             	mov    %rsi,%r14
  4006b1:	4c 29 e5             	sub    %r12,%rbp
  4006b4:	48 83 ec 08          	sub    $0x8,%rsp
  4006b8:	48 c1 fd 03          	sar    $0x3,%rbp
  4006bc:	e8 e7 fd ff ff       	callq  4004a8 <_init>
  4006c1:	48 85 ed             	test   %rbp,%rbp
  4006c4:	74 20                	je     4006e6 <__libc_csu_init+0x56>
  4006c6:	31 db                	xor    %ebx,%ebx
  4006c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006cf:	00 
  4006d0:	4c 89 fa             	mov    %r15,%rdx
  4006d3:	4c 89 f6             	mov    %r14,%rsi
  4006d6:	44 89 ef             	mov    %r13d,%edi
  4006d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006dd:	48 83 c3 01          	add    $0x1,%rbx
  4006e1:	48 39 dd             	cmp    %rbx,%rbp
  4006e4:	75 ea                	jne    4006d0 <__libc_csu_init+0x40>
  4006e6:	48 83 c4 08          	add    $0x8,%rsp
  4006ea:	5b                   	pop    %rbx
  4006eb:	5d                   	pop    %rbp
  4006ec:	41 5c                	pop    %r12
  4006ee:	41 5d                	pop    %r13
  4006f0:	41 5e                	pop    %r14
  4006f2:	41 5f                	pop    %r15
  4006f4:	c3                   	retq   
  4006f5:	90                   	nop
  4006f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006fd:	00 00 00 

0000000000400700 <__libc_csu_fini>:
  400700:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400704 <_fini>:
  400704:	48 83 ec 08          	sub    $0x8,%rsp
  400708:	48 83 c4 08          	add    $0x8,%rsp
  40070c:	c3                   	retq   
